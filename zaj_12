Zad 1. Napisz program, który prosi użytkownika o wpisanie dwóch liczb, a następnie dzieli pierwszą liczbę przez drugą. Program powinien obsługiwać dwa rodzaje wyjątków: ArithmeticException w przypadku dzielenia przez zero i InputMismatchException, gdy użytkownik wprowadzi coś innego niż liczby. W obu przypadkach należy wyświetlić stosowny komunikat błędu i poprosić użytkownika o ponowne wprowadzenie danych. Wykorzystaj typ int.

import java.util.InputMismatchException;
import java.util.Scanner;

public class Main
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);

        while(true)
        {
        try
        {
            System.out.println("Podaj a:");
            int a = scanner.nextInt();
            System.out.println("Podaj b:");
            int b = scanner.nextInt();

            System.out.println(podziel(a, b));
            break;
        } catch (ArithmeticException a)
        {
            System.out.println("Nie mozna dzielic przez 0");
        } catch (InputMismatchException b)
        {
            System.out.println("Zle dane");
            scanner.nextLine();
        }
    }
}
    public static int podziel(int a, int b)
    {
        return a/b;
    }
}

Zad 2. Napisz klasę Product, która zawiera pola: name (typu String), price (typu double) i productionYear (typu int). Zaimplementuj interfejs Comparable w taki sposób, aby obiekty klasy Product były sortowane rosnąco według daty produkcji. Stwórz listę tablicową 5 obiektów klasy Product i posortuj ją według sprecyzowanego kryterium.

public class Produkt implements Comparable<Produkt>
{
    String name;
    double price;
    int productionYear;

    @Override
    public int compareTo(Produkt o)
    {
        return Integer.compare(this.productionYear, o.productionYear);
    }

    public Produkt(String name, double price, int productionYear)
    {
        this.name = name;
        this.price = price;
        this.productionYear = productionYear;
    }

    @Override
    public String toString()
    {
        return "Produkt{" +
                "productionYear=" + productionYear +
                '}';
    }
}

import java.util.ArrayList;
import java.util.Collections;

public class Main
{
    public static void main(String[] args)
    {
        ArrayList<Produkt> lista = new ArrayList<>();
        lista.add(new Produkt("produk1", 5, 1992));
        lista.add(new Produkt("produk2", 8, 2003));
        lista.add(new Produkt("produk3", 12, 2021));
        lista.add(new Produkt("produk4", 42, 2012));
        lista.add(new Produkt("produk5", 76, 2000));

        Collections.sort(lista);
        System.out.println(lista);
    }
}
