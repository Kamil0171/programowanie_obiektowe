public class Main
{
    public static void main(String[] args)
    {
        House domStefana = new House();
        domStefana.garage = true;
        domStefana.rooms = 6;
        domStefana.area = 150;
        domStefana.floors = 2;
        domStefana.garage = false;

        System.out.println(domStefana.getValue());

        House domSylwii = new House();
        domSylwii.garden = true;
        domSylwii.garage = false;
        domSylwii.area = 175;
        domSylwii.rooms = 4;
        domSylwii.floors = 2;

        System.out.println(domSylwii.getValue());


    }
}

Zad 1. Utwórz klasę Dog z polami: name, breed i age. Napisz metodę bark(), która wydrukuje na konsoli "Hau Hau". Stwórz przypadek testowy, aby wywołać metodę co najmniej jeden raz.

public class Dog
{
    String name;
    String breed;
    int age;
    public void bark()
    {
        System.out.println("Hau Hau");
    }
}

public class Main
{
    public static void main(String[] args)
    {
        Dog myDog = new Dog();
        myDog.name = "Buddy";
        myDog.breed = "Labrador";
        myDog.age = 3;
        myDog.bark();
    }
}

Zad 2. Stwórz klasę Car z polami: brand, model i speed. Napisz metody accelerate(int value) i decelerate(int value), które odpowiednio zwiększają i zmniejszają prędkość o podaną wartość. Stwórz przypadek testowy, aby wywołać każdą metodę co najmniej jeden raz.

public class Car
{
    String brand;
    String model;
    int speed;
    public Car(String brand, String model)
    {
        this.brand = brand;
        this.model = model;
        this.speed = 0;
    }
    public void accelerate(int value)
    {
        speed += value;
        System.out.println("Prędkość samochodu " + brand + " " + model + " została zwiększona o " + value + " km/h. Aktualna prędkość: " + speed + " km/h.");
    }
    public void decelerate(int value)
    {
        if (speed >= value) {
            speed -= value;
        } else {
            speed = 0;
        }
        System.out.println("Prędkość samochodu " + brand + " " + model + " została zmniejszona o " + value + " km/h. Aktualna prędkość: " + speed + " km/h.");
    }
}

public class Main
{
    public static void main(String[] args)
    {
        Car myCar = new Car("Toyota", "Camry");
        myCar.accelerate(50);
        myCar.decelerate(20);
    }
}

Zad 3. Stwórz klasę Time z polami: hours i minutes. Napisz metodę addTime(Time otherTime), która dodaje do bieżącego czasu czas podany jako argument i zwraca nowy obiekt klasy Time. Zadbaj o to, aby minuty i godziny nie przekraczały odpowiednio 59 i 23. Stwórz przypadek testowy, aby wywołać metodę co najmniej jeden raz.

public class Time
{
    int hours;
    int minutes;
    public Time(int hours, int minutes)
    {
        this.hours = hours;
        this.minutes = minutes;
    }
    public Time addTime(Time otherTime)
    {
        int newHours = this.hours + otherTime.hours;
        int newMinutes = this.minutes + otherTime.minutes;

        if (newMinutes >= 60)
        {
            newMinutes -= 60;
            newHours++;
        }
        if (newHours >= 24)
        {
            newHours -= 24;
        }
        return new Time(newHours, newMinutes);
    }

    public String toString()
    {
        return String.format("%02d:%02d", hours, minutes);
    }
}

public class Main
{
    public static void main(String[] args)
    {
        Time currentTime = new Time(10, 30);
        Time additionalTime = new Time(3, 45);

        Time newTime = currentTime.addTime(additionalTime);

        System.out.println("Aktualny czas: " + currentTime);
        System.out.println("Czas do dodania: " + additionalTime);
        System.out.println("Nowy czas: " + newTime);
    }
}

Zad 4. Wykonaj po kolei dwa podpunkty:
A. Stwórz klasę Car zawierającą pole brand. W klasie Main, utwórz obiekt klasy Car, przypisz mu wartość null i spróbuj odwołać się do pola brand. Jaki jest wynik?
B. Zmodyfikuj kod z podpunktu A tak, aby sprawdzić, czy obiekt Car jest null przed odwołaniem się do pola brand. Jaki jest wynik?

public class Car 
{ 
    String brand;
}

public class Main
{
    public static void main(String[] args)
    {
        Car car = null;
        try
        {
            String carBrand = car.brand;
        } catch (NullPointerException e)
        {
            System.out.println("Podpunkt A: Wyjątek NullPointerException został rzucony.");
        }

        if (car != null)
        {
            String carBrand = car.brand;
        }
        else
        {
            System.out.println("Podpunkt B: Obiekt car jest null.");
        }
    }
}

Zad 5. Stwórz obiekt klasy Dog z zadania pierwszego, i ustaw jego wartość na null. Spróbuj wykonać metodę  bark() na tym obiekcie

public class Dog
{
    public void bark()
    {
        System.out.println("Woof! Woof!");
    }
}

public class Main
{
    public static void main(String[] args)
    {
        Dog dog = null;
        dog.bark();
    }
}

Zad 6. Wykonaj kolejno poniższe czynności:
Stwórz klasę Czlowiek z polem imie. Dodaj do klasy metodę przedstawSie, która wyświetli wiadomość “Cześć, jestem” i imię osoby. W klasie Main, utwórz obiekt Czlowiek i wywołaj na nim metodę przedstawSie. Czy musisz użyć słowo kluczowe this w implementacji metody?
Dodaj do klasy Czlowiek metodę powiedzCzesc, która jako argument przyjmuje inny obiekt klasy Czlowiek i wyświetla wiadomość “Cześć,” i imię drugiego człowieka. Przeanalizuj działanie.
Dodaj do klasy Czlowiek metodę zmienImie, która jako argument przyjmuje łańcuch znaków i przypisuje go do pola imie. Utwórz obiekt Czlowiek i użyj metody zmienImie do zmiany jego imienia. Następnie wywołaj metodę przedstawSie. Czy imię zostało zmienione? Czy musisz użyć słowo kluczowe this w implementacji metody?
Dodaj do klasy Czlowiek metodę zamienImionami, która jako argument przyjmuje inny obiekt klasy Czlowiek i zamienia imionami obie osoby. Utwórz dwa obiekty Czlowiek i użyj metody zamienImionami do zamiany ich imion. Następnie wywołaj metodę przedstawSie na obu obiektach. Czy imiona zostały zamienione?

public class Czlowiek
{
    String imie;
    public Czlowiek(String imie) 
    {
        this.imie = imie;
    }
    public void przedstawSie()
    {
        System.out.println("Cześć, jestem " + imie);
    }
    public void powiedzCzesc(Czlowiek innyCzlowiek) 
    {
        System.out.println("Cześć, " + innyCzlowiek.imie);
    }
    public void zmienImie(String noweImie) 
    {
        imie = noweImie;
    }
    public void zamienImionami(Czlowiek innyCzlowiek)
    {
        String tempImie = this.imie;
        this.imie = innyCzlowiek.imie;
        innyCzlowiek.imie = tempImie;
    }
}

public class Main
{
    public static void main(String[] args)
    {
        Czlowiek osoba1 = new Czlowiek("Anna");
        Czlowiek osoba2 = new Czlowiek("Bartek");

        osoba1.przedstawSie();
        osoba2.przedstawSie();

        osoba1.powiedzCzesc(osoba2);

        osoba1.zmienImie("Alicja");
        osoba1.przedstawSie();

        osoba1.zamienImionami(osoba2);
        osoba1.przedstawSie();
        osoba2.przedstawSie();
    }
}

Zad 7. Wykonaj kolejno poniższe czynności:
Stwórz klasę Licznik z jednym polem liczba. Dodaj do klasy metodę zwieksz, która przyjmuje parametr typu int i zwiększa wartość pola liczba o wartość tego parametru. W klasie Main, utwórz zmienną typu int, przekaż ją do metody zwieksz i sprawdź, czy wartość zmiennej zmieniła się po wywołaniu metody.
Dodaj do klasy Licznik metodę dodaj, która przyjmuje inny obiekt Licznik i dodaje wartość jego pola liczba do pola liczba bieżącego obiektu. Utwórz dwa obiekty Licznik w klasie Main i użyj metody dodaj. Sprawdź, czy obiekt przekazany jako argument metody dodaj zmienił swoją wartość po wywołaniu metody.
Stwórz klasę Zmieniacz, która posiada metodę zmienWartosc, która jako argument przyjmuje typ int. Wewnątrz metody zmień wartość argumentu na inną. W klasie Main utwórz zmienną int, a następnie przekaż ją do metody zmienWartosc i sprawdź, czy wartość zmiennej się zmieniła.
Dodaj do klasy Zmieniacz metodę zmienObiekt, która jako argument przyjmuje obiekt Licznik. Wewnątrz metody zmień wartość pola liczba obiektu Licznik na inną. W klasie Main utwórz obiekt Licznik, a następnie przekaż go do metody zmienObiekt i sprawdź, czy wartość pola liczba obiektu się zmieniła.

class Licznik 
{
    int liczba;
    void zwieksz(int wartosc) 
    {
        liczba += wartosc;
    }
    void dodaj(Licznik innyLicznik) 
    {
        liczba += innyLicznik.liczba;
    }
}
class Zmieniacz 
{
    void zmienWartosc(int wartosc)
    {
        wartosc = 42;
    }
    void zmienObiekt(Licznik licznik) 
    {
        licznik.liczba = 99;
    }
}

public class Main 
{
    public static void main(String[] args) 
    {
        Licznik licznik1 = new Licznik();
        int wartosc1 = 5;
        licznik1.zwieksz(wartosc1);
        System.out.println("Wartość licznika1: " + licznik1.liczba);
        
        Licznik licznik2 = new Licznik();
        licznik2.liczba = 10;
        licznik1.dodaj(licznik2);
        System.out.println("Wartość licznika1 po dodaniu licznika2: " + licznik1.liczba);
        System.out.println("Wartość licznika2 po dodaniu do licznika1: " + licznik2.liczba);
        
        Zmieniacz zmieniacz = new Zmieniacz();
        int wartosc2 = 7;
        zmieniacz.zmienWartosc(wartosc2);
        System.out.println("Wartość zmiennej po użyciu Zmieniacz: " + wartosc2);
        
        Licznik licznik3 = new Licznik();
        zmieniacz.zmienObiekt(licznik3);
        System.out.println("Wartość pola liczba obiektu Licznik po użyciu Zmieniacz: " + licznik3.liczba);
    }
}
