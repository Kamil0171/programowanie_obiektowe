public class Main
{
    public static void main(String[] args)
    {
        House domStefana = new House();
        domStefana.garage = true;
        domStefana.rooms = 6;
        domStefana.area = 150;
        domStefana.floors = 2;
        domStefana.garage = false;

        System.out.println(domStefana.getValue());

        House domSylwii = new House();
        domSylwii.garden = true;
        domSylwii.garage = false;
        domSylwii.area = 175;
        domSylwii.rooms = 4;
        domSylwii.floors = 2;

        System.out.println(domSylwii.getValue());


    }
}

Zad 1. Utwórz klasę Dog z polami: name, breed i age. Napisz metodę bark(), która wydrukuje na konsoli "Hau Hau". Stwórz przypadek testowy, aby wywołać metodę co najmniej jeden raz.

Zad 2. Stwórz klasę Car z polami: brand, model i speed. Napisz metody accelerate(int value) i decelerate(int value), które odpowiednio zwiększają i zmniejszają prędkość o podaną wartość. Stwórz przypadek testowy, aby wywołać każdą metodę co najmniej jeden raz.

Zad 3. Stwórz klasę Time z polami: hours i minutes. Napisz metodę addTime(Time otherTime), która dodaje do bieżącego czasu czas podany jako argument i zwraca nowy obiekt klasy Time. Zadbaj o to, aby minuty i godziny nie przekraczały odpowiednio 59 i 23. Stwórz przypadek testowy, aby wywołać metodę co najmniej jeden raz.

Zad 4. Wykonaj po kolei dwa podpunkty:
A. Stwórz klasę Car zawierającą pole brand. W klasie Main, utwórz obiekt klasy Car, przypisz mu wartość null i spróbuj odwołać się do pola brand. Jaki jest wynik?
B. Zmodyfikuj kod z podpunktu A tak, aby sprawdzić, czy obiekt Car jest null przed odwołaniem się do pola brand. Jaki jest wynik?
